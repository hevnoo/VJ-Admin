{"version":3,"file":"js/367.bc239050.js","mappings":"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","sources":["webpack://vj-admin/./node_modules/vue-loader/dist/exportHelper.js","webpack://vj-admin/./src/components/orderDialog/index.vue","webpack://vj-admin/./src/components/orderDialog/index.vue?a24c","webpack://vj-admin/./src/components/pages/index.vue","webpack://vj-admin/./src/components/pages/index.vue?9f3e","webpack://vj-admin/./src/views/orders/orderList/index.vue","webpack://vj-admin/./src/views/orders/orderList/index.vue?c129","webpack://vj-admin/./src/views/orders/orderList/orderHeader/index.vue","webpack://vj-admin/./src/views/orders/orderList/orderHeader/index.vue?4a95","webpack://vj-admin/./src/views/orders/orderList/orderTable/index.vue","webpack://vj-admin/./src/views/orders/orderList/orderTable/index.vue?ab65"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\r\n  <el-dialog\r\n    :model-value=\"props.isDialog\"\r\n    title=\"编辑\"\r\n    width=\"32%\"\r\n    destroy-on-close\r\n    @before-close=\"beforeClose\"\r\n    @close=\"beforeClose\"\r\n    draggable\r\n  >\r\n    <el-form>\r\n      <el-form-item label=\"商品名称\">\r\n        <el-input\r\n          v-model=\"props.info.goodsName\"\r\n          autocomplete=\"off\"\r\n          style=\"width: 300px\"\r\n          placeholder=\"请输入名称\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"销售数量\">\r\n        <el-input-number v-model=\"props.info.saleNumber\" :step=\"1\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"商品价格\">\r\n        <el-input-number\r\n          v-model=\"props.info.goodsPrice\"\r\n          :precision=\"2\"\r\n          :step=\"0.5\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"顾客姓名\">\r\n        <el-input\r\n          v-model=\"props.info.clientName\"\r\n          autocomplete=\"off\"\r\n          placeholder=\"请输入姓名\"\r\n        />\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"beforeClose\">取消</el-button>\r\n        <el-button\r\n          v-if=\"eventMark === 'orderTable'\"\r\n          type=\"primary\"\r\n          @click=\"confirm\"\r\n        >\r\n          更新\r\n        </el-button>\r\n        <el-button v-else type=\"primary\" @click=\"confirm\"> 添加 </el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {\r\n  ref,\r\n  reactive,\r\n  onMounted,\r\n  computed,\r\n  watch,\r\n  defineProps,\r\n  defineEmits\r\n} from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\nimport storage from '@/utils/storage.js'\r\nconst emits = defineEmits(['isDialogOrder'])\r\nconst store = useStore()\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst isDialog = ref(false)\r\n\r\nlet props = defineProps({\r\n  isDialog: Boolean,\r\n  info: Object,\r\n  eventMark: String\r\n})\r\n// const classList = computed(() => store.state.classes.classList)\r\nconst currentPage = computed(() => store.state.appSwitch.currentPage)\r\n// const stock = computed(() => store.state.order.stock)\r\n\r\n//弹框的确认按钮\r\nconst confirm = () => {\r\n  if (\r\n    props.info.goodsName &&\r\n    props.info.saleNumber &&\r\n    props.info.goodsPrice &&\r\n    props.info.clientName\r\n  ) {\r\n    //根据标识区分父组件\r\n    if (props.eventMark === 'orderHeader') {\r\n      store.dispatch('order/getStock', props.info.goodsName)\r\n      const stock = computed(() => store.state.order.stock)\r\n      // 点击添加按钮时，先按order商品名称去goods数据表中找出对应的商品的数量；\r\n      //然后，判断商品数量是否 > 销售数量。条件满足就放行，否则提示库存不足。\r\n      setTimeout(() => {\r\n        if (\r\n          stock.value.goodsNumber !== 0 &&\r\n          stock.value.goodsNumber >= props.info.saleNumber\r\n        ) {\r\n          store.dispatch('order/addOrder', props.info)\r\n          //更新goods\r\n          let num = stock.value.goodsNumber - props.info.saleNumber\r\n          store.dispatch('order/upStock', {\r\n            num: num,\r\n            goodsName: props.info.goodsName\r\n          })\r\n        } else {\r\n          ElMessage.warning(`库存不足！仅剩 ${stock.value.goodsNumber} 件商品`)\r\n        }\r\n      }, 500)\r\n      //\r\n    } else if (props.eventMark === 'orderTable') {\r\n      store.dispatch('order/upOrder', props.info)\r\n    } else {\r\n      console.log('未知的事件标识')\r\n    }\r\n  } else {\r\n    ElMessage.warning('请填写内容')\r\n  }\r\n  emits('isDialogOrder', false)\r\n}\r\nconst beforeClose = () => {\r\n  //关闭前的回调\r\n  emits('isDialogOrder', false)\r\n}\r\n// const close=()=>{\r\n//   //关闭的回调\r\n//   emits('isDialogGoods', false)\r\n// }\r\n//props是单向数据流，所以要关闭就要emit发送关闭信号给父组件,再让父组件传过来关闭信号！\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"wrapper\">\r\n    <el-pagination\r\n      background\r\n      layout=\"total, prev, pager, next, jumper\"\r\n      :total=\"total\"\r\n      :page-size=\"pageSize\"\r\n      :current-page=\"currentPage\"\r\n      @current-change=\"currentChange\"\r\n    >\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, defineProps, computed, defineEmits } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport storage from '@/utils/storage.js'\r\nconst store = useStore()\r\nconst route = useRoute()\r\nconst router = useRouter()\r\n// const emits = defineEmits(['currentChange'])\r\n// emits('currentChange', currentPage)\r\n\r\n// console.log(router.currentRoute.value.name)\r\nconst total = computed(() => {\r\n  if (router.currentRoute.value.name === 'goodsList') {\r\n    return store.state.goods.total\r\n  } else if (router.currentRoute.value.name == 'orderList' || 'collect') {\r\n    return store.state.order.total\r\n  } else {\r\n    return 10\r\n  }\r\n})\r\nconst pageSize = computed(() => {\r\n  if (router.currentRoute.value.name === 'goodsList') {\r\n    return store.state.goods.pageSize\r\n  } else if (router.currentRoute.value.name == 'orderList' || 'collect') {\r\n    return store.state.order.pageSize\r\n  } else {\r\n    return 10\r\n  }\r\n})\r\nconst currentPage = computed(() => store.state.appSwitch.currentPage)\r\n//当前页改变时触发。\r\nconst currentChange = (val) => {\r\n  // console.log(`当前页: ${val}`)\r\n  // store.commit('goods/changePage', val)\r\n  store.commit('appSwitch/changePage', val)\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <!-- 订单列表 -->\r\n  <div class=\"wrapper\" v-show=\"orderList\">\r\n    <header class=\"orderHeader\">\r\n      <orderHeader></orderHeader>\r\n    </header>\r\n    <main class=\"orderTable\">\r\n      <orderTable></orderTable>\r\n    </main>\r\n    <footer class=\"pages\">\r\n      <Pages></Pages>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport orderHeader from '@/views/orders/orderList/orderHeader/index.vue'\r\nimport orderTable from '@/views/orders/orderList/orderTable/index.vue'\r\nimport Pages from '@/components/pages/index.vue'\r\nimport { ref, onMounted, computed, watch } from 'vue'\r\nimport {\r\n  useRoute,\r\n  useRouter,\r\n  onBeforeRouteLeave,\r\n  onBeforeRouteUpdate\r\n} from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport storage from '@/utils/storage.js'\r\nconst store = useStore()\r\nconst route = useRoute()\r\nconst router = useRouter()\r\n\r\n//初次加载就在本地加入页码\r\nconst currentPage = computed(() => store.state.appSwitch.currentPage)\r\nstorage.setItem_s('page', currentPage.value)\r\n//初始化加载列表数据\r\nconst getList = () => {\r\n  store.dispatch('order/getOrder', currentPage.value)\r\n}\r\nsetTimeout(() => {\r\n  getList()\r\n}, 300)\r\nconst orderList = computed(() => store.state.order.orderList)\r\n//离开组件时将初始化分页。\r\nonBeforeRouteLeave((to, from) => {\r\n  storage.removeItem_s('page')\r\n  store.commit('appSwitch/changePage', 1)\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.wrapper {\r\n  margin-top: 10px;\r\n}\r\n.orderHeader {\r\n  width: 100%;\r\n  height: 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f5fafe;\r\n}\r\n.orderTable {\r\n}\r\n.pages {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=2da80166&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\code\\\\x2-project\\\\VJ-Admin\\\\vj-admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2da80166\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <el-input\r\n      class=\"input\"\r\n      v-model=\"infoSearch.clientName\"\r\n      placeholder=\"请输入姓名查询\"\r\n    >\r\n      <template #append>\r\n        <el-button class=\"btn\" @click=\"search()\">搜索</el-button>\r\n      </template>\r\n    </el-input>\r\n    <el-button class=\"addBtn\" type=\"primary\" plain @click=\"adds()\"\r\n      >新增订单</el-button\r\n    >\r\n  </div>\r\n  <!-- 添加的弹框 -->\r\n  <orderDialog\r\n    :isDialog=\"isDialog\"\r\n    :info=\"info\"\r\n    :eventMark=\"eventMark\"\r\n    @isDialogOrder=\"isDialogOrder\"\r\n  ></orderDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport orderDialog from '@/components/orderDialog/index.vue'\r\nimport { ref, reactive, onMounted, computed, watch } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nconst store = useStore()\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nlet isDialog = ref(false)\r\nconst eventMark = ref('orderHeader') //传事件标识，dialog子组件依据标识判断\r\nlet isSearch = ref(false) //搜索状态标识.\r\nconst currentPage = computed(() => store.state.appSwitch.currentPage)\r\nconst info = reactive({\r\n  goodsName: null,\r\n  saleNumber: 0,\r\n  clientName: null,\r\n  goodsPrice: 0\r\n})\r\nconst infoSearch = reactive({\r\n  clientName: null,\r\n  page: currentPage.value || 1\r\n})\r\n//搜索\r\nconst search = () => {\r\n  if (!infoSearch.clientName) {\r\n    isSearch.value = false\r\n    store.dispatch('order/getOrder', currentPage.value)\r\n  } else {\r\n    isSearch.value = true //开启搜索状态标识\r\n    infoSearch.page = currentPage.value\r\n    store.dispatch('order/getSearchOrder', infoSearch)\r\n    isSearch.value = false\r\n  }\r\n}\r\nconst adds = () => {\r\n  isDialog.value = true\r\n}\r\n//弹框\r\nconst isDialogOrder = (emi) => {\r\n  isDialog.value = emi\r\n}\r\n\r\nwatch(\r\n  currentPage,\r\n  (newVal, oldVal) => {\r\n    if (newVal !== oldVal) {\r\n      //如果搜索状态标识为true，那么请求的是搜索列表，否则为默认数据列表。\r\n      if (isSearch.value === true) {\r\n        isSearch.value = false\r\n        infoSearch.page = currentPage.value\r\n        store.dispatch('order/getSearchOrder', infoSearch)\r\n      } else {\r\n        store.dispatch('order/getOrder', currentPage.value)\r\n      }\r\n    }\r\n  }\r\n  // { immediate: true, deep: true }\r\n)\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  width: 100%;\r\n  height: auto;\r\n  margin-left: 7px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.input {\r\n  width: 300px;\r\n  height: 35px;\r\n}\r\n.btn {\r\n  color: rgba(250, 250, 250, 1) !important;\r\n}\r\n//添加分类按钮\r\n::v-deep .el-input-group__append {\r\n  background-color: rgba(32, 176, 172, 0.7);\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n::v-deep .el-input-group__append:hover {\r\n  background-color: rgba(32, 176, 172, 0.5);\r\n}\r\n::v-deep .el-input-group__append:active {\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n}\r\n//\r\n.addBtn {\r\n  margin-right: 50px;\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=d00a5ae4&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\code\\\\x2-project\\\\VJ-Admin\\\\vj-admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d00a5ae4\"]])\n\nexport default __exports__","<template>\r\n  <el-table\r\n    ref=\"tableRef\"\r\n    :data=\"orderList\"\r\n    style=\"width: 100%\"\r\n    @selection-change=\"SelectionChange\"\r\n    :border=\"true\"\r\n    fit\r\n  >\r\n    <el-table-column type=\"selection\" width=\"55\" />\r\n    <el-table-column property=\"id\" label=\"ID\" width=\"70\" />\r\n    <el-table-column prop=\"saleDate\" label=\"出售日期\" show-overflow-tooltip />\r\n    <el-table-column prop=\"goodsName\" label=\"商品名称\" />\r\n    <el-table-column prop=\"goodsPrice\" label=\"商品价格\" />\r\n    <el-table-column prop=\"saleNumber\" label=\"销售数量\" />\r\n    <el-table-column prop=\"clientName\" label=\"顾客姓名\" />\r\n    <el-table-column label=\"操作\" width=\"150\">\r\n      <template #default=\"scope\">\r\n        <!--  -->\r\n        <el-icon\r\n          @click=\"handleEdit(scope.$index, scope.row)\"\r\n          style=\"margin: auto 18px auto 5px\"\r\n          ><EditPen\r\n        /></el-icon>\r\n        <el-popconfirm\r\n          title=\"确认要删除吗?\"\r\n          confirm-button-text=\"删除\"\r\n          cancel-button-text=\"取消\"\r\n          @confirm=\"handleDelete(scope.$index, scope.row)\"\r\n        >\r\n          <template #reference>\r\n            <el-icon><Delete /></el-icon>\r\n          </template>\r\n        </el-popconfirm>\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n  <!-- 清空与批量删除 -->\r\n  <div style=\"margin-top: 10px; margin-left: 5px\">\r\n    <el-button @click=\"toggleSelection()\">清空</el-button>\r\n    <el-button @click=\"deleMore()\">批量删除</el-button>\r\n  </div>\r\n  <!-- 编辑弹框 -->\r\n  <orderDialog\r\n    :isDialog=\"isDialog\"\r\n    :info=\"info\"\r\n    :eventMark=\"eventMark\"\r\n    @isDialogOrder=\"isDialogOrder\"\r\n  ></orderDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport orderDialog from '@/components/orderDialog/index.vue'\r\nimport store from '@/store'\r\nimport { ref, reactive, onMounted, computed, watch } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport dayjs from 'dayjs'\r\nconst tableRef = ref(null)\r\nlet isDialog = ref(false)\r\nconst eventMark = ref('orderTable') //传事件标识\r\nlet info = reactive({\r\n  goodsName: null,\r\n  saleNumber: 0,\r\n  clientName: null,\r\n  goodsPrice: 0\r\n})\r\nconst orderList = computed(() => store.state.order.orderList)\r\n\r\n//弹框\r\nconst isDialogOrder = (emi) => {\r\n  isDialog.value = emi\r\n}\r\n\r\n//1.编辑更新\r\nconst handleEdit = (index, row) => {\r\n  info = row\r\n  // console.log(info)\r\n  isDialog.value = true\r\n}\r\n\r\n//2.删除\r\nconst handleDelete = (index, row) => {\r\n  const id = { id: row.id }\r\n  store.dispatch('order/deleOrder', id)\r\n}\r\n//*清空\r\nconst toggleSelection = (val) => {\r\n  if (val) {\r\n    val.forEach((f) => {\r\n      tableRef.value.toggleRowSelection(f, undefined)\r\n    })\r\n  } else {\r\n    tableRef.value.clearSelection()\r\n  }\r\n}\r\n//*批量删除\r\nconst deleMore = () => {\r\n  // console.log(tableRef.value.getSelectionRows())\r\n  let idArr = []\r\n  if (tableRef.value.getSelectionRows().length !== 0) {\r\n    tableRef.value.getSelectionRows().map((m) => {\r\n      idArr.push(m.id)\r\n    })\r\n    const currentId = { id: idArr }\r\n    store.dispatch('order/deleOrder', currentId)\r\n  } else {\r\n    console.log('未选中')\r\n  }\r\n}\r\n//*监听并获取选中行的内容,以数组形式保存\r\nconst SelectionChange = (val) => {}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n//\r\n.el-table {\r\n  // box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n}\r\n//表格头部 行\r\n::v-deep .el-table__header {\r\n}\r\n//表头\r\n::v-deep th {\r\n  height: 42px;\r\n  background-color: #f5fafe !important;\r\n}\r\n//每一行\r\n::v-deep .el-table__row {\r\n  height: 43px;\r\n}\r\n.logInput {\r\n  width: 70%;\r\n  height: 30px;\r\n  padding: 7px;\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=4d697cf2&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\code\\\\x2-project\\\\VJ-Admin\\\\vj-admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4d697cf2\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","store","useStore","confirm","useRoute","useRouter","ref","computed","state","appSwitch","currentPage","info","goodsName","saleNumber","goodsPrice","clientName","eventMark","dispatch","stock","order","setTimeout","value","goodsNumber","num","ElMessage","console","log","emits","beforeClose","__exports__","router","total","currentRoute","name","goods","pageSize","currentChange","commit","storage","getList","orderList","onBeforeRouteLeave","to","from","isDialog","isSearch","reactive","infoSearch","page","search","adds","isDialogOrder","emi","watch","newVal","oldVal","tableRef","handleEdit","index","row","handleDelete","id","toggleSelection","forEach","f","toggleRowSelection","undefined","clearSelection","deleMore","idArr","getSelectionRows","length","map","m","push","currentId","SelectionChange"],"sourceRoot":""}