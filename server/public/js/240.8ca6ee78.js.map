{"version":3,"file":"js/240.8ca6ee78.js","mappings":"2GAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,mRC2DXI,GAAQC,EAAAA,EAAAA,MAeRC,IAdQC,EAAAA,EAAAA,OACCC,EAAAA,EAAAA,OACEC,EAAAA,EAAAA,KAAI,IAQDC,EAAAA,EAAAA,KAAS,IAAMN,EAAMO,MAAMC,UAAUC,cAIzC,KACd,GACEd,EAAMe,KAAKC,WACXhB,EAAMe,KAAKE,YACXjB,EAAMe,KAAKG,YACXlB,EAAMe,KAAKI,WAGX,GAAwB,gBAApBnB,EAAMoB,UAA6B,CACrCf,EAAMgB,SAAS,iBAAkBrB,EAAMe,KAAKC,WAC5C,MAAMM,GAAQX,EAAAA,EAAAA,KAAS,IAAMN,EAAMO,MAAMW,MAAMD,QAG/CE,YAAW,KACT,GAC8B,IAA5BF,EAAMG,MAAMC,aACZJ,EAAMG,MAAMC,aAAe1B,EAAMe,KAAKE,WACtC,CACAZ,EAAMgB,SAAS,iBAAkBrB,EAAMe,MAEvC,IAAIY,EAAML,EAAMG,MAAMC,YAAc1B,EAAMe,KAAKE,WAC/CZ,EAAMgB,SAAS,gBAAiB,CAC9BM,IAAKA,EACLX,UAAWhB,EAAMe,KAAKC,WAE1B,MACEY,EAAAA,GAAAA,QAAmB,WAAUN,EAAMG,MAAMC,kBAC3C,GACC,IAEL,KAA+B,eAApB1B,EAAMoB,UACff,EAAMgB,SAAS,gBAAiBrB,EAAMe,MAEtCc,QAAQC,IAAI,gBAGdF,EAAAA,GAAAA,QAAkB,SAEpBG,EAAM,iBAAiB,EAAM,GAEzBC,EAAc,KAElBD,EAAM,iBAAiB,EAAM,E,urDC1H/B,MAAME,EAAc,EAEpB,O,mLCwBA,MAAM5B,GAAQC,EAAAA,EAAAA,OACAE,EAAAA,EAAAA,OACCC,EAAAA,EAAAA,MACf,IAAIyB,GAAWxB,EAAAA,EAAAA,KAAI,GACnB,MAAMU,GAAYV,EAAAA,EAAAA,IAAI,eACtB,IAAIyB,GAAWzB,EAAAA,EAAAA,KAAI,GACnB,MAAMI,GAAcH,EAAAA,EAAAA,KAAS,IAAMN,EAAMO,MAAMC,UAAUC,cACnDC,GAAOqB,EAAAA,EAAAA,IAAS,CACpBpB,UAAW,KACXC,WAAY,EACZE,WAAY,KACZD,WAAY,IAERmB,GAAaD,EAAAA,EAAAA,IAAS,CAC1BjB,WAAY,KACZmB,KAAMxB,EAAYW,OAAS,IAGvBc,EAAS,KACRF,EAAWlB,YAIdgB,EAASV,OAAQ,EACjBY,EAAWC,KAAOxB,EAAYW,MAC9BpB,EAAMgB,SAAS,uBAAwBgB,GACvCF,EAASV,OAAQ,IANjBU,EAASV,OAAQ,EACjBpB,EAAMgB,SAAS,iBAAkBP,EAAYW,OAM/C,EAEIe,EAAO,KACXN,EAAST,OAAQ,CAAI,EAGjBgB,EAAiBC,IACrBR,EAAST,MAAQiB,CAAG,E,OAGtBC,EAAAA,EAAAA,IACE7B,GACA,CAAC8B,EAAQC,KACHD,IAAWC,KAEU,IAAnBV,EAASV,OACXU,EAASV,OAAQ,EACjBY,EAAWC,KAAOxB,EAAYW,MAC9BpB,EAAMgB,SAAS,uBAAwBgB,IAEvChC,EAAMgB,SAAS,iBAAkBP,EAAYW,OAEjD,I,kpBCxEJ,MAAMQ,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://vj-admin/./node_modules/vue-loader/dist/exportHelper.js","webpack://vj-admin/./src/components/orderDialog/index.vue","webpack://vj-admin/./src/components/orderDialog/index.vue?a24c","webpack://vj-admin/./src/views/orders/orderList/orderHeader/index.vue","webpack://vj-admin/./src/views/orders/orderList/orderHeader/index.vue?4a95"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\r\n  <el-dialog\r\n    :model-value=\"props.isDialog\"\r\n    title=\"编辑\"\r\n    width=\"32%\"\r\n    destroy-on-close\r\n    @before-close=\"beforeClose\"\r\n    @close=\"beforeClose\"\r\n    draggable\r\n  >\r\n    <el-form>\r\n      <el-form-item label=\"商品名称\">\r\n        <el-input\r\n          v-model=\"props.info.goodsName\"\r\n          autocomplete=\"off\"\r\n          style=\"width: 300px\"\r\n          placeholder=\"请输入名称\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"销售数量\">\r\n        <el-input-number v-model=\"props.info.saleNumber\" :step=\"1\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"商品价格\">\r\n        <el-input-number\r\n          v-model=\"props.info.goodsPrice\"\r\n          :precision=\"2\"\r\n          :step=\"0.5\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"顾客姓名\">\r\n        <el-input\r\n          v-model=\"props.info.clientName\"\r\n          autocomplete=\"off\"\r\n          placeholder=\"请输入姓名\"\r\n        />\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"beforeClose\">取消</el-button>\r\n        <el-button\r\n          v-if=\"eventMark === 'orderTable'\"\r\n          type=\"primary\"\r\n          @click=\"confirm\"\r\n        >\r\n          更新\r\n        </el-button>\r\n        <el-button v-else type=\"primary\" @click=\"confirm\"> 添加 </el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {\r\n  ref,\r\n  reactive,\r\n  onMounted,\r\n  computed,\r\n  watch,\r\n  defineProps,\r\n  defineEmits\r\n} from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\nimport storage from '@/utils/storage.js'\r\nconst emits = defineEmits(['isDialogOrder'])\r\nconst store = useStore()\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst isDialog = ref(false)\r\n\r\nlet props = defineProps({\r\n  isDialog: Boolean,\r\n  info: Object,\r\n  eventMark: String\r\n})\r\n// const classList = computed(() => store.state.classes.classList)\r\nconst currentPage = computed(() => store.state.appSwitch.currentPage)\r\n// const stock = computed(() => store.state.order.stock)\r\n\r\n//弹框的确认按钮\r\nconst confirm = () => {\r\n  if (\r\n    props.info.goodsName &&\r\n    props.info.saleNumber &&\r\n    props.info.goodsPrice &&\r\n    props.info.clientName\r\n  ) {\r\n    //根据标识区分父组件\r\n    if (props.eventMark === 'orderHeader') {\r\n      store.dispatch('order/getStock', props.info.goodsName)\r\n      const stock = computed(() => store.state.order.stock)\r\n      // 点击添加按钮时，先按order商品名称去goods数据表中找出对应的商品的数量；\r\n      //然后，判断商品数量是否 > 销售数量。条件满足就放行，否则提示库存不足。\r\n      setTimeout(() => {\r\n        if (\r\n          stock.value.goodsNumber !== 0 &&\r\n          stock.value.goodsNumber >= props.info.saleNumber\r\n        ) {\r\n          store.dispatch('order/addOrder', props.info)\r\n          //更新goods\r\n          let num = stock.value.goodsNumber - props.info.saleNumber\r\n          store.dispatch('order/upStock', {\r\n            num: num,\r\n            goodsName: props.info.goodsName\r\n          })\r\n        } else {\r\n          ElMessage.warning(`库存不足！仅剩 ${stock.value.goodsNumber} 件商品`)\r\n        }\r\n      }, 500)\r\n      //\r\n    } else if (props.eventMark === 'orderTable') {\r\n      store.dispatch('order/upOrder', props.info)\r\n    } else {\r\n      console.log('未知的事件标识')\r\n    }\r\n  } else {\r\n    ElMessage.warning('请填写内容')\r\n  }\r\n  emits('isDialogOrder', false)\r\n}\r\nconst beforeClose = () => {\r\n  //关闭前的回调\r\n  emits('isDialogOrder', false)\r\n}\r\n// const close=()=>{\r\n//   //关闭的回调\r\n//   emits('isDialogGoods', false)\r\n// }\r\n//props是单向数据流，所以要关闭就要emit发送关闭信号给父组件,再让父组件传过来关闭信号！\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <el-input\r\n      class=\"input\"\r\n      v-model=\"infoSearch.clientName\"\r\n      placeholder=\"请输入姓名查询\"\r\n    >\r\n      <template #append>\r\n        <el-button class=\"btn\" @click=\"search()\">搜索</el-button>\r\n      </template>\r\n    </el-input>\r\n    <el-button class=\"addBtn\" type=\"primary\" plain @click=\"adds()\"\r\n      >新增订单</el-button\r\n    >\r\n  </div>\r\n  <!-- 添加的弹框 -->\r\n  <orderDialog\r\n    :isDialog=\"isDialog\"\r\n    :info=\"info\"\r\n    :eventMark=\"eventMark\"\r\n    @isDialogOrder=\"isDialogOrder\"\r\n  ></orderDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport orderDialog from '@/components/orderDialog/index.vue'\r\nimport { ref, reactive, onMounted, computed, watch } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nconst store = useStore()\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nlet isDialog = ref(false)\r\nconst eventMark = ref('orderHeader') //传事件标识，dialog子组件依据标识判断\r\nlet isSearch = ref(false) //搜索状态标识.\r\nconst currentPage = computed(() => store.state.appSwitch.currentPage)\r\nconst info = reactive({\r\n  goodsName: null,\r\n  saleNumber: 0,\r\n  clientName: null,\r\n  goodsPrice: 0\r\n})\r\nconst infoSearch = reactive({\r\n  clientName: null,\r\n  page: currentPage.value || 1\r\n})\r\n//搜索\r\nconst search = () => {\r\n  if (!infoSearch.clientName) {\r\n    isSearch.value = false\r\n    store.dispatch('order/getOrder', currentPage.value)\r\n  } else {\r\n    isSearch.value = true //开启搜索状态标识\r\n    infoSearch.page = currentPage.value\r\n    store.dispatch('order/getSearchOrder', infoSearch)\r\n    isSearch.value = false\r\n  }\r\n}\r\nconst adds = () => {\r\n  isDialog.value = true\r\n}\r\n//弹框\r\nconst isDialogOrder = (emi) => {\r\n  isDialog.value = emi\r\n}\r\n\r\nwatch(\r\n  currentPage,\r\n  (newVal, oldVal) => {\r\n    if (newVal !== oldVal) {\r\n      //如果搜索状态标识为true，那么请求的是搜索列表，否则为默认数据列表。\r\n      if (isSearch.value === true) {\r\n        isSearch.value = false\r\n        infoSearch.page = currentPage.value\r\n        store.dispatch('order/getSearchOrder', infoSearch)\r\n      } else {\r\n        store.dispatch('order/getOrder', currentPage.value)\r\n      }\r\n    }\r\n  }\r\n  // { immediate: true, deep: true }\r\n)\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  width: 100%;\r\n  height: auto;\r\n  margin-left: 7px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.input {\r\n  width: 300px;\r\n  height: 35px;\r\n}\r\n.btn {\r\n  color: rgba(250, 250, 250, 1) !important;\r\n}\r\n//添加分类按钮\r\n::v-deep .el-input-group__append {\r\n  background-color: rgba(32, 176, 172, 0.7);\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n::v-deep .el-input-group__append:hover {\r\n  background-color: rgba(32, 176, 172, 0.5);\r\n}\r\n::v-deep .el-input-group__append:active {\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n}\r\n//\r\n.addBtn {\r\n  margin-right: 50px;\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=d00a5ae4&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\code\\\\x2-project\\\\VJ-Admin\\\\vj-admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d00a5ae4\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","store","useStore","confirm","useRoute","useRouter","ref","computed","state","appSwitch","currentPage","info","goodsName","saleNumber","goodsPrice","clientName","eventMark","dispatch","stock","order","setTimeout","value","goodsNumber","num","ElMessage","console","log","emits","beforeClose","__exports__","isDialog","isSearch","reactive","infoSearch","page","search","adds","isDialogOrder","emi","watch","newVal","oldVal"],"sourceRoot":""}